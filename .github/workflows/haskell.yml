name: Haskell Stack Project CI

on:
  push:
  schedule:
  - cron: "0 0 * * 1"

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        plan:
        - { build: stack, resolver: "--resolver lts-16"  }    # ghc-8.8.3
        exclude:
        - os: macOS-latest
          plan:
            build: cabal

    runs-on: ${{ matrix.os }}
    steps:
    - name: Install OS Packages
      uses: mstksg/get-package@v1
      with:
        apt-get: ${{ matrix.apt-get }}
        brew: ${{ matrix.brew }}
    - uses: actions/checkout@v1

    - name: Setup stack
      uses: mstksg/setup-stack@v1

    - name: Setup cabal-install
      uses: actions/setup-haskell@v1
      with:
        ghc-version: ${{ matrix.plan.ghc }}
        cabal-version: ${{ matrix.plan.cabal-install }}
      if: matrix.plan.build == 'cabal'

    - name: Install dependencies
      run: |
        set -ex
        case "$BUILD" in
          stack)
            stack --no-terminal --install-ghc $ARGS test --bench --only-dependencies
            ;;
          cabal)
            cabal --version
            cabal update
            PACKAGES=$(stack --install-ghc query locals | grep '^ *path' | sed 's@^ *path:@@')
            cabal install --only-dependencies --enable-tests --enable-benchmarks --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS $PACKAGES
            ;;
        esac
        set +ex
      env:
        ARGS: ${{ matrix.plan.resolver }}
        BUILD: ${{ matrix.plan.build }}

    - name: Build & Test
      run: |
        set -ex
        case "$BUILD" in
          stack)
            stack --no-terminal $ARGS test --bench --no-run-benchmarks --haddock --no-haddock-deps
            ;;
          cabal)
            PACKAGES=$(stack --install-ghc query locals | grep '^ *path' | sed 's@^ *path:@@')
            cabal install --enable-tests --enable-benchmarks --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS $PACKAGES
        esac
        set +ex
      env:
        ARGS: ${{ matrix.plan.resolver }}
        BUILD: ${{ matrix.plan.build }}
